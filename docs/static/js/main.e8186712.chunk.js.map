{"version":3,"sources":["common/debounce.js","components/tag.js","components/itemTile.js","App.js","serviceWorker.js","index.js"],"names":["debounce","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout","Tag","props","className","genres","find","a","id","gid","name","ItemTile","data","poster_path","src","alt","parseInt","vote_average","style","display","textAlign","href","title","release_date","overview","length","substring","original_language","langs","l","iso_639_1","english_name","popularity","position","bottom","genre_ids","map","g","key","App","onKeyUp","event","loadData","state","page","url","document","getElementById","value","fetch","json","d","setState","total_pages","languages","currentPage","paddingLeft","paddingRight","type","placeholder","paddingTop","fontSize","fontWeight","results","total_results","onClick","onPrevClick","onNextClick","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e8186712.chunk.js","sourcesContent":["function debounce(func, wait, immediate) {\r\n  var timeout;\r\n\r\n  return function executedFunction() {\r\n    var context = this;\r\n    var args = arguments;\r\n\r\n    var later = function() {\r\n      timeout = null;\r\n      if (!immediate) func.apply(context, args);\r\n    };\r\n\r\n    var callNow = immediate && !timeout;\r\n\r\n    clearTimeout(timeout);\r\n\r\n    timeout = setTimeout(later, wait);\r\n\r\n    if (callNow) func.apply(context, args);\r\n  };\r\n}\r\n\r\nexport default debounce;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\n\r\nfunction Tag(props) {\r\n  return (\r\n    <span className=\"g-tag\">\r\n      {props.genres.find(a => a.id === props.gid).name}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default Tag;\r\n","import React from \"react\";\r\nimport Tag from \"./tag\";\r\nimport \"../App.css\";\r\n\r\nfunction ItemTile(props) {\r\n  return (\r\n    <div className=\"item poster card\">\r\n      <div className=\"image_content\">\r\n        {props.data.poster_path ? (\r\n          <img\r\n            className=\"poster fade lazyautosizes lazyloaded\"\r\n            src={\r\n              props.data.poster_path &&\r\n              `https://image.tmdb.org/t/p/w185_and_h278_bestv2${props.data.poster_path}`\r\n            }\r\n            alt=\"\"\r\n          />\r\n        ) : (\r\n          <div className=\"no-image\"></div>\r\n        )}\r\n      </div>\r\n      <div className=\"info\">\r\n        <div className=\"wrapper\">\r\n          <div className=\"p-tag\">\r\n            {parseInt(props.data.vote_average) * 10}\r\n            <small>%</small>\r\n          </div>\r\n          <div style={{ display: \"inline-block\", textAlign: \"left\" }}>\r\n            <a\r\n              id={`movie_${props.data.id}`}\r\n              className=\"title result\"\r\n              href={`/movie/${props.data.id}?language=en-US`}\r\n              title={props.data.title}\r\n              alt={props.data.title}\r\n            >\r\n              {props.data.title}\r\n            </a>\r\n            <span>\r\n              <small>{props.data.release_date}</small>\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <p className=\"overview\">\r\n          <span className=\"desc\" title={props.data.overview}>\r\n            {props.data.overview.length > 300\r\n              ? props.data.overview.substring(0, 300) + \"...\"\r\n              : props.data.overview}\r\n          </span>\r\n\r\n          <span className=\"lang-tile\">\r\n            <b>Original Language</b>:{\" \"}\r\n            <small>\r\n              {props.data.original_language &&\r\n                props.langs.find(\r\n                  l => l.iso_639_1 === props.data.original_language\r\n                ).english_name}\r\n            </small>\r\n          </span>\r\n          <span className=\"lang-tile\">\r\n            <b>Popularity</b>: <small>{props.data.popularity}</small>\r\n          </span>\r\n        </p>\r\n        <div\r\n          className=\"tag-wrapper\"\r\n          style={{ textAlign: \"left\", position: \"absolute\", bottom: \"15px\" }}\r\n        >\r\n          {props.data.genre_ids.length\r\n            ? props.data.genre_ids.map(gid => (\r\n                <Tag genres={props.g.genres} key={gid} gid={gid} />\r\n              ))\r\n            : \"\"}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItemTile;\r\n","import React, { Component } from \"react\";\r\nimport debounce from \"./common/debounce\";\r\nimport ItemTile from \"./components/itemTile\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      data: {},\r\n      g: [],\r\n      langs: []\r\n    };\r\n  }\r\n\r\n  async loadData(page) {\r\n    let url = `https://api.themoviedb.org/3/search/movie?api_key=c98d68ce201dd1845ce26a43f4f9d9d7&page=${page}&language=en-US&query=${\r\n      document.getElementById(\"search_text\").value\r\n    }`;\r\n    let data = fetch(url);\r\n    let d = await (await data).json();\r\n    this.setState({\r\n      data: d,\r\n      page: page,\r\n      total_pages: d.total_pages\r\n    });\r\n  }\r\n\r\n  onKeyUp = debounce(event => {\r\n    this.loadData(1);\r\n  }, 400);\r\n\r\n  async componentDidMount() {\r\n    let genres = fetch(\r\n      \"https://api.themoviedb.org/3/genre/movie/list?api_key=c98d68ce201dd1845ce26a43f4f9d9d7&language=en-US\"\r\n    );\r\n    let languages = fetch(\r\n      \"https://api.themoviedb.org/3/configuration/languages?api_key=c98d68ce201dd1845ce26a43f4f9d9d7\"\r\n    );\r\n\r\n    let g = await (await genres).json();\r\n    let langs = await (await languages).json();\r\n\r\n    this.setState({\r\n      g: g,\r\n      langs: langs\r\n    });\r\n  }\r\n\r\n  async onPrevClick() {\r\n    let currentPage = this.state.page;\r\n    if (currentPage > 1) await this.loadData(--currentPage);\r\n  }\r\n\r\n  async onNextClick() {\r\n    let currentPage = this.state.page;\r\n    let total_pages = this.state.total_pages;\r\n    if (currentPage > 0 && currentPage < total_pages)\r\n      await this.loadData(++currentPage);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <img\r\n            src=\"https://www.themoviedb.org/assets/2/v4/logos/primary-green-d70eebe18a5eb5b166d5c1ef0796715b8d1a2cbc698f96d311d62f894ae87085.svg\"\r\n            className=\"App-logo\"\r\n            alt=\"logo\"\r\n            style={{ paddingLeft: \"10px\" }}\r\n          />\r\n          <div\r\n            style={{\r\n              paddingLeft: \"10px\",\r\n              textAlign: \"left\",\r\n              paddingRight: \"10px\"\r\n            }}\r\n          >\r\n            Community built movie and TV database\r\n          </div>\r\n        </header>\r\n        <div className=\"search_bar\">\r\n          <section className=\"search\">\r\n            <div className=\"sub_media\">\r\n              <input\r\n                id=\"search_text\"\r\n                type=\"text\"\r\n                placeholder=\"Search for a movie, tv show, person...\"\r\n                className=\"k-input\"\r\n                onKeyUp={event => this.onKeyUp(event)}\r\n              />\r\n            </div>\r\n          </section>\r\n        </div>\r\n        <section className=\"content\">\r\n          <div style={{ paddingTop: \"10px\" }}>\r\n            <span\r\n              style={{\r\n                paddingTop: \"10px\",\r\n                fontSize: \"18px\",\r\n                fontWeight: \"bold\"\r\n              }}\r\n            >\r\n              {this.state.data &&\r\n                this.state.data.results &&\r\n                \"Total Results: \" + this.state.data.total_results + \" | \"}{\" \"}\r\n            </span>\r\n            <small>\r\n              {this.state.data.page\r\n                ? \"Total Pages \" + this.state.data.total_pages\r\n                : \"\"}\r\n            </small>\r\n            <small>\r\n              {this.state.data.page ? \" | Page \" + this.state.data.page : \"\"}\r\n            </small>\r\n          </div>\r\n          <div className=\"results flex\">\r\n            {this.state.data &&\r\n              this.state.data.results &&\r\n              this.state.data.results.length &&\r\n              this.state.data.results.map(d => (\r\n                <ItemTile\r\n                  key={d.id}\r\n                  data={d}\r\n                  g={this.state.g}\r\n                  langs={this.state.langs}\r\n                />\r\n              ))}\r\n          </div>\r\n        </section>\r\n        {this.state.data && this.state.data.total_pages > 1 ? (\r\n          <section className=\"pagination\">\r\n            <img\r\n              className=\"prev-page\"\r\n              onClick={event => this.onPrevClick(event)}\r\n              alt=\"\"\r\n              src=\"https://img.icons8.com/flat_round/64/000000/circled-left-2--v1.png\"\r\n            />\r\n            <img\r\n              className=\"next-page\"\r\n              onClick={event => this.onNextClick(event)}\r\n              alt=\"\"\r\n              src=\"https://img.icons8.com/flat_round/64/000000/circled-right-2--v1.png\"\r\n            />\r\n          </section>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}